/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Context, Serializer } from '@metaplex-foundation/umi';

export type MyDefinedType = { thing: number; hash: Uint8Array };

export type MyDefinedTypeArgs = MyDefinedType;

export function getMyDefinedTypeSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<MyDefinedTypeArgs, MyDefinedType> {
  const s = context.serializer;
  return s.struct<MyDefinedType>(
    [
      ['thing', s.u8()],
      ['hash', s.bytes({ size: 32 })],
    ],
    { description: 'MyDefinedType' }
  ) as Serializer<MyDefinedTypeArgs, MyDefinedType>;
}
